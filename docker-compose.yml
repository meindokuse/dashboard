version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dashboard
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    build: ./dashboard_backend
    expose:
      - "8080"
    env_file:
      - ./dashboard_backend/.env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  celery_worker:
    build: ./dashboard_backend
    command: celery -A src.celery_app.celery_app worker --loglevel=info
    env_file:
      - ./dashboard_backend/.env
    depends_on:
      - backend
      - postgres
      - redis
    restart: unless-stopped

  celery_beat:
    build: ./dashboard_backend
    command: celery -A src.celery_app.celery_app beat --loglevel=info
    env_file:
      - ./dashboard_backend/.env
    depends_on:
      - backend
      - postgres
      - redis
    restart: unless-stopped

  bot:
    build: ./alert_bot
    expose:
      - "8000"
    env_file:
      - ./alert_bot/.env
    depends_on:
      - postgres
    volumes:
      - ./alert_bot/data:/app/data
    restart: unless-stopped

  frontend:
    build: ./dashboard_frontend
    expose:
      - "5173"
    command: npm run dev -- --host 0.0.0.0 --port 5173
    restart: unless-stopped

  nginx:
    image: nginx:1.21-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
      - bot
    restart: unless-stopped

volumes:
  postgres_data: